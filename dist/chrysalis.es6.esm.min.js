/**
 * Chrysalis v0.10.3-β
 * Casper Søkol, 2018
 * Distributed under the MIT license
 */

const h=(e,t,...n)=>({nodeName:e,attributes:t||{},children:n}),createVnode$1=e=>{if("object"!=typeof e)return document.createTextNode(e);const t=document.createElement(e.nodeName);for(let n in e.attributes)t.setAttribute(n,e.attributes[n]);e.children.forEach(e=>t.appendChild(createVnode$1(e)));return t},render=(e,t)=>{t.appendChild(createVnode$1(e))},changed=(e,t)=>{const n=typeof e!=typeof t;const i=e.nodeName!==t.nodeName;const o="string"==typeof e&&e!==t;const c=e.type!==t.type||e.attributes&&e.attributes.forceUpdate;return n||o||c||i},updateElement=(e,t,n,i=0)=>{if(n)if(t){if(changed(t,n))e.replaceChild(createVnode(t),e.childNodes[i]);else if(t.nodeName){updateAttributes(e.childNodes[i],t.attributes,n.attributes);const o=t.children.length,c=n.children.length;for(let d=0;d<o||d<c;d++)updateElement(e.childNodes[i],t.children[d],n.children[d],d)}}else e.removeChild(e.childNodes[i]);else e.appendChild(createVnode(t))},updateAttributes=(e,t,n={})=>{const i=Object.assign({},t,n);Object.keys(i).forEach(i=>{updateAttribute(e,i,t[i],n[i])})},updateAttribute=(e,t,n,i)=>{n?i&&n===i||e.setAttribute(t,n):e.removeAttribute(t)};export{h,render,updateElement};
