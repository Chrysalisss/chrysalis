/**
 * Chrysalis v0.10.3-β
 * Casper Søkol, 2018
 * Distributed under the MIT license
 */

const h=(e,t,...n)=>({nodeName:e,attributes:t||{},children:n}),createVnode$1=e=>{if("object"!=typeof e)return document.createTextNode(e);const t=document.createElement(e.nodeName);Object.keys(e.attributes).map(n=>{t.setAttribute(n,e.attributes[n])});e.children.forEach(e=>t.appendChild(createVnode$1(e)));return t},render=(e,t)=>{t.appendChild(createVnode$1(e))},changed=(e,t)=>{const n=typeof e!=typeof t;const c=e.nodeName!==t.nodeName;const i="string"==typeof e&&e!==t;const o=e.type!==t.type||e.attributes&&e.attributes.forceUpdate;return n||i||o||c},updateElement=(e,t,n,c=0)=>{if(n)if(t){if(changed(t,n))e.replaceChild(createVnode(t),e.childNodes[c]);else if(t.nodeName){updateAttributes(e.childNodes[c],t.attributes,n.attributes);const i=t.children.length,o=n.children.length;for(let d=0;d<i||d<o;d++)updateElement(e.childNodes[c],t.children[d],n.children[d],d)}}else e.removeChild(e.childNodes[c]);else e.appendChild(createVnode(t))},updateAttributes=(e,t,n={})=>{const c=Object.assign({},t,n);Object.keys(c).forEach(c=>{updateAttribute(e,c,t[c],n[c])})},updateAttribute=(e,t,n,c)=>{n?c&&n===c||e.setAttribute(t,n):e.removeAttribute(t)};export{h,render,updateElement};
